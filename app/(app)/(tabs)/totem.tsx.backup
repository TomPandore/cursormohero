import React, { useState, useEffect } from 'react';
import { 
  StyleSheet, 
  Text, 
  View, 
  ScrollView, 
  ImageBackground,
  TouchableOpacity,
  Image,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { router } from 'expo-router';
import { COLORS } from '@/constants/Colors';
import { BORDER_RADIUS, FONTS, SPACING } from '@/constants/Layout';
import ProgressBar from '@/components/ProgressBar';
import Button from '@/components/Button';
import { useAuth } from '@/context/AuthContext';
import { useProgram } from '@/context/ProgramContext';
import { supabase } from '@/lib/supabase';
import { fetchUserStats, UserStats } from '@/lib/statsUtils';
import { ChevronRight, Flame, Dumbbell, Activity, Wind } from 'lucide-react-native';

interface ClanData {
  nom_clan: string;
  couleur_theme: string;
  image_totem: string;
  image_url: string;
  rituel_entree: string;
}

export default function TotemScreen() {
  const { user } = useAuth();
  const { currentProgram, userPrograms } = useProgram();
  const [clanData, setClanData] = useState<ClanData | null>(null);
  const [userStats, setUserStats] = useState<UserStats>({
    consecutiveDays: 0,
    totalDaysCompleted: 0,
    totalPushups: 0,
    totalSquats: 0,
    totalBreathingExercises: 0
  });
  
  useEffect(() => {
    if (user?.clanId) {
      fetchClanData();
      loadUserStats();
    }
  }, [user?.clanId]);

  const fetchClanData = async () => {
    try {
      const { data, error } = await supabase
        .from('clans')
        .select('nom_clan, couleur_theme, image_totem, image_url, rituel_entree')
        .eq('id', user?.clanId)
        .single();

      if (error) throw error;
      if (data) setClanData(data);
    } catch (error) {
      console.error('Error fetching clan data:', error);
    }
  };

  const loadUserStats = async () => {
    if (!user?.id) return;
    
    try {
      const stats = await fetchUserStats(user.id);
      setUserStats(stats);
      console.log('Statistiques utilisateur chargées:', stats);
    } catch (error) {
      console.error('Erreur lors du chargement des statistiques utilisateur:', error);
    }
  };

  if (!user || !clanData) return null;

  const getClanColor = () => {
    return clanData.couleur_theme || COLORS.primary;
  };
  
  const getCurrentProgramProgress = () => {
    if (!currentProgram) return 0;
    
    const userProgram = userPrograms.find(up => up.programId === currentProgram.id);
    if (!userProgram) return 0;
    
    return userProgram.currentDay / currentProgram.duration;
  };

  const handleChangeClan = () => {
    router.push('/(auth)/onboarding/clan');
  };

  const getAvatarUrl = (clanName: string) => {
    if (!clanName) {
      return 'https://mohero.fr/wp-content/uploads/2025/05/avatar-base.png';
    }
    
    if (clanName.toUpperCase().includes('ONOTKA')) {
      return 'https://mohero.fr/wp-content/uploads/2025/05/avatar-onotka.png';
    } else if (clanName.toUpperCase().includes('EKLOA')) {
      return 'https://mohero.fr/wp-content/uploads/2025/05/avatar-ekloa.png';
    } else if (clanName.toUpperCase().includes('OKWÁHO') || clanName.toUpperCase().includes('OKWAHO')) {
      return 'https://mohero.fr/wp-content/uploads/2025/05/avatar-okwadho.png';
    } else {
      return 'https://mohero.fr/wp-content/uploads/2025/05/avatar-base.png';
    }
  };

  return (
    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>
      <View style={styles.header}>
        <Text style={styles.title}>VOTRE TOTEM</Text>
      </View>
      
      <View style={styles.totemContainer}>
        <ImageBackground
          source={{ uri: clanData.image_totem || clanData.image_url }}
          style={styles.clanBackground}
          imageStyle={styles.clanBackgroundImage}
        >
          <LinearGradient
            colors={['rgba(0,0,0,0.1)', 'rgba(0,0,0,0.7)', 'rgba(0,0,0,0.9)']}
            style={styles.gradient}
          >
            <View style={styles.totemContent}>
              <Text style={styles.welcomeText}>Bienvenue, {user.name}</Text>
              
              <View style={[styles.clanBadge, { backgroundColor: getClanColor() }]}>
                <Text style={styles.clanName}>CLAN {clanData.nom_clan}</Text>
              </View>
              
              <View style={styles.statsContainer}>
                <View style={styles.statItem}>
                  <Text style={styles.statValue}>{userStats.totalDaysCompleted}</Text>
                  <Text style={styles.statLabel}>JOURS ACCOMPLIS</Text>
                </View>
                
                {currentProgram ? (
                  <View style={styles.statItem}>
                    <Text style={styles.statValue}>
                      {userPrograms.find(up => up.programId === currentProgram.id)?.currentDay || 0}/{currentProgram.duration}
                    </Text>
                    <Text style={styles.statLabel}>PROGRESSION</Text>
                  </View>
                ) : null}
              </View>
              
              {currentProgram ? (
                <View style={styles.programContainer}>
                  <Text style={styles.programTitle}>{currentProgram.title}</Text>
                  <ProgressBar 
                    progress={getCurrentProgramProgress()} 
                    showPercentage 
                    color={getClanColor()}
                  />
                </View>
              ) : (
                <View style={styles.noProgramContainer}>
                  <Text style={styles.noProgramText}>
                    Aucun programme en cours
                  </Text>
                  <Button
                    title="Choisir un programme"
                    onPress={() => router.push('/(app)/(tabs)/voies')}
                    size="small"
                    style={styles.programButton}
                  />
                </View>
              )}
            </View>
          </LinearGradient>
        </ImageBackground>
      </View>
      
      <View style={styles.clanInfoContainer}>
        <View style={styles.avatarContainer}>
          <Image 
            source={{ uri: 'https://mohero.fr/wp-content/uploads/2025/05/avatar-base.png' }}
            style={[styles.avatarImage, { borderColor: getClanColor() }]}
          />
        </View>
        
        <View style={styles.clanInfoCard}>
          <Text style={[styles.clanTitle, { color: getClanColor() }]}>TU ES UN {clanData.nom_clan} !</Text>
          <Text style={styles.ritualText}>{clanData.rituel_entree}</Text>
        </View>
      </View>
      
      <View style={styles.statsTotemContainer}>
        <Text style={styles.sectionTitle}>STATS TOTEM</Text>
        
        <View style={styles.statsTotemCard}>
          <View style={styles.statsTotemHeader}>
            <View style={[styles.totemDecoration, { backgroundColor: getClanColor() }]} />
            <View style={[styles.totemDecoration, { backgroundColor: getClanColor() }]} />
          </View>
          
          <View style={styles.statRow}>
            <View style={styles.statIcon}>
              <Flame size={20} color={COLORS.text} />
            </View>
            <View style={styles.statDetails}>
              <Text style={styles.statTitle}>Jours actifs consécutifs</Text>
              <Text style={[styles.statCount, { color: getClanColor() }]}>{userStats.consecutiveDays}</Text>
            </View>
          </View>
          
          <View style={[styles.statDivider, { backgroundColor: getClanColor(), opacity: 0.3 }]} />
          
          <View style={styles.statRow}>
            <View style={styles.statIcon}>
              <Dumbbell size={20} color={COLORS.text} />
            </View>
            <View style={styles.statDetails}>
              <Text style={styles.statTitle}>Total de pompes effectuées</Text>
              <Text style={[styles.statCount, { color: getClanColor() }]}>{userStats.totalPushups}</Text>
            </View>
          </View>
          
          <View style={[styles.statDivider, { backgroundColor: getClanColor(), opacity: 0.3 }]} />
          
          <View style={styles.statRow}>
            <View style={styles.statIcon}>
              <Activity size={20} color={COLORS.text} />
            </View>
            <View style={styles.statDetails}>
              <Text style={styles.statTitle}>Squats cumulés</Text>
              <Text style={[styles.statCount, { color: getClanColor() }]}>{userStats.totalSquats}</Text>
            </View>
          </View>
          
          <View style={[styles.statDivider, { backgroundColor: getClanColor(), opacity: 0.3 }]} />
          
          <View style={styles.statRow}>
            <View style={styles.statIcon}>
              <Wind size={20} color={COLORS.text} />
            </View>
            <View style={styles.statDetails}>
              <Text style={styles.statTitle}>Rituels de respiration complétés</Text>
              <Text style={[styles.statCount, { color: getClanColor() }]}>{userStats.totalBreathingExercises}</Text>
            </View>
          </View>
          
          <View style={styles.statsTotemFooter}>
            <View style={[styles.totemDecoration, { backgroundColor: getClanColor() }]} />
            <View style={[styles.totemDecoration, { backgroundColor: getClanColor() }]} />
          </View>
        </View>
      </View>
      
      <View style={styles.changeClanContainer}>
        <Text style={styles.sectionTitle}>REJOINDRE UN AUTRE CLAN</Text>
        
        <View style={styles.changeClanCard}>
          <Text style={styles.changeClanDescription}>
            Tu peux quitter ton clan actuel pour en rejoindre un autre.
            Tu gardes ta progression, mais ton entraînement changera de philosophie.
          </Text>
          
          <TouchableOpacity 
            style={styles.changeClanLink}
            onPress={handleChangeClan}
          >
            <Text style={[styles.changeClanText, { color: getClanColor() }]}>Changer de clan</Text>
            <ChevronRight size={16} color={getClanColor()} />
          </TouchableOpacity>
        </View>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  contentContainer: {
    padding: SPACING.lg,
    paddingTop: SPACING.xl * 2,
  },
  header: {
    marginBottom: SPACING.lg,
  },
  title: {
    ...FONTS.heading,
    color: COLORS.text,
    fontSize: 24,
    letterSpacing: 2,
  },
  totemContainer: {
    height: 400,
    borderRadius: BORDER_RADIUS.lg,
    overflow: 'hidden',
    marginBottom: SPACING.xl,
  },
  clanBackground: {
    flex: 1,
  },
  clanBackgroundImage: {
    borderRadius: BORDER_RADIUS.lg,
  },
  gradient: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: SPACING.lg,
  },
  totemContent: {
    alignItems: 'center',
    zIndex: 1,
  },
  welcomeText: {
    ...FONTS.heading,
    color: COLORS.text,
    fontSize: 26,
    marginBottom: SPACING.md,
  },
  clanBadge: {
    paddingHorizontal: SPACING.md,
    paddingVertical: SPACING.xs,
    borderRadius: BORDER_RADIUS.sm,
    marginBottom: SPACING.lg,
  },
  clanName: {
    ...FONTS.button,
    color: COLORS.text,
    letterSpacing: 1,
  },
  statsContainer: {
    flexDirection: 'row',
    marginBottom: SPACING.lg,
  },
  statItem: {
    alignItems: 'center',
    marginHorizontal: SPACING.md,
  },
  statValue: {
    ...FONTS.heading,
    color: COLORS.text,
    fontSize: 28,
  },
  statLabel: {
    ...FONTS.caption,
    color: COLORS.textSecondary,
    letterSpacing: 1,
  },
  programContainer: {
    width: '100%',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    borderRadius: BORDER_RADIUS.md,
    padding: SPACING.md,
  },
  programTitle: {
    ...FONTS.subheading,
    color: COLORS.text,
    marginBottom: SPACING.sm,
  },
  noProgramContainer: {
    alignItems: 'center',
  },
  noProgramText: {
    ...FONTS.body,
    color: COLORS.textSecondary,
    marginBottom: SPACING.md,
  },
  programButton: {
    minWidth: 200,
  },
  clanInfoContainer: {
    marginBottom: SPACING.xl,
    position: 'relative',
    alignItems: 'center',
  },
  avatarContainer: {
    position: 'absolute',
    top: 20,
    zIndex: 10,
    alignSelf: 'center',
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 3,
    },
    shadowOpacity: 0.27,
    shadowRadius: 4.65,
    elevation: 6,
    backgroundColor: COLORS.card,
    padding: 3,
    borderRadius: 43,
  },
  avatarImage: {
    width: 80,
    height: 80,
    borderRadius: 40,
    borderWidth: 3,
  },
  clanInfoCard: {
    backgroundColor: COLORS.card,
    borderRadius: BORDER_RADIUS.lg,
    padding: SPACING.lg,
    paddingTop: SPACING.xl + 30,
    marginTop: 40,
    width: '100%',
  },
  clanTitle: {
    ...FONTS.heading,
    fontSize: 18,
    marginBottom: SPACING.sm,
  },
  changeClanLink: {
    flexDirection: 'row',
    alignItems: 'center',
    alignSelf: 'flex-start',
    marginTop: SPACING.md,
    paddingVertical: SPACING.xs,
  },
  changeClanText: {
    ...FONTS.button,
    fontSize: 14,
    marginRight: SPACING.xs,
  },
  ritualText: {
    ...FONTS.body,
    color: COLORS.text,
    fontStyle: 'italic',
    lineHeight: 24,
  },
  journeyContainer: {
    marginBottom: SPACING.xl,
  },
  sectionTitle: {
    ...FONTS.subheading,
    color: COLORS.text,
    marginBottom: SPACING.md,
    letterSpacing: 1,
  },
  journeyCard: {
    backgroundColor: COLORS.card,
    borderRadius: BORDER_RADIUS.lg,
    padding: SPACING.lg,
  },
  journeyText: {
    ...FONTS.body,
    color: COLORS.text,
    fontStyle: 'italic',
    marginBottom: SPACING.lg,
    textAlign: 'center',
  },
  journeyStat: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: SPACING.md,
  },
  journeyLabel: {
    ...FONTS.body,
    color: COLORS.textSecondary,
  },
  journeyValue: {
    ...FONTS.body,
    color: COLORS.text,
    fontFamily: 'Rajdhani-Bold',
  },
  ritualButton: {
    padding: SPACING.md,
    borderRadius: BORDER_RADIUS.md,
    alignItems: 'center',
  },
  ritualButtonText: {
    ...FONTS.button,
    color: COLORS.text,
  },
  changeClanContainer: {
    marginBottom: SPACING.xl,
  },
  changeClanCard: {
    backgroundColor: COLORS.card,
    borderRadius: BORDER_RADIUS.lg,
    padding: SPACING.lg,
  },
  changeClanDescription: {
    ...FONTS.body,
    color: COLORS.text,
    marginBottom: SPACING.lg,
    lineHeight: 24,
  },
  changeClanButton: {
    padding: SPACING.md,
    borderRadius: BORDER_RADIUS.md,
    alignItems: 'center',
  },
  changeClanButtonText: {
    ...FONTS.button,
    color: COLORS.text,
  },
  statsTotemContainer: {
    marginBottom: SPACING.xl,
  },
  statsTotemCard: {
    backgroundColor: COLORS.card,
    borderRadius: BORDER_RADIUS.lg,
    padding: SPACING.lg,
    borderLeftWidth: 3,
    borderRightWidth: 3,
    borderColor: COLORS.primary,
  },
  statsTotemHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: SPACING.md,
  },
  statsTotemFooter: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: SPACING.md,
  },
  totemDecoration: {
    width: 40,
    height: 8,
    borderRadius: 4,
  },
  statRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginVertical: SPACING.sm,
  },
  statIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: SPACING.md,
  },
  statEmoji: {
    fontSize: 20,
  },
  statDetails: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  statTitle: {
    ...FONTS.body,
    color: COLORS.text,
  },
  statCount: {
    ...FONTS.heading,
    fontSize: 22,
  },
  statDivider: {
    height: 1,
    width: '100%',
    marginVertical: SPACING.xs,
  },
});